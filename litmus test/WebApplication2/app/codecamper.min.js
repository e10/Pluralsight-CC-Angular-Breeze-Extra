! function () {
    "use strict";
    var n = angular.module("app", ["ngAnimate", "ngRoute", "ngSanitize", "common", "common.bootstrap", "environment", "ui.bootstrap", "breeze.angular", "breeze.directives", "ngplus", "ngzWip"]);
    n.run(["routemediator", function (n) {
        n.setRoutingEventHandlers()
    }])
}();;
! function () {
    "use strict";
    angular.module("app").run(["breeze", function (e) {
        e.NamingConvention.camelCase.setAsDefault()
    }])
}();;
! function () {
    "use strict";

    function e(e) {
        return new e.ValidationOptions({
            validateOnAttach: !1
        }).setAsDefault(), {
            breeze: e,
            localSessionSort: function () { },
            remoteServiceName: "breeze/Breeze"
        }
    }

    function r(e, r, n, i) {
        function a() {
            n.zValidateTemplate = '<span class="invalid"><i class="fa fa-warning-sign"></i>Inconceivable! %error%</span>'
        }
        return i.config = {
            enabled: !1,
            key: "CCAngularBreeze",
            events: r.events.storage,
            wipKey: "CCAngularBreeze.wip",
            appErrorPrefix: r.appErrorPrefix,
            newGuid: e.breeze.core.getUuid,
            version: r.version
        }, a(), {
            breeze: e.breeze
        }
    }
    var n = angular.module("app").factory("configBreeze", ["breeze", e]);
    n.config(["breezeProvider", "config", "zDirectivesConfigProvider", "zStorageConfigProvider", r])
}();;
! function () {
    "use strict";

    function e(e, r, n) {
        var o = r.appErrorPrefix,
            a = n.getLogFn("app", "error");
        return function (r, n) {
            if (e(r, n), !o || 0 !== r.message.indexOf(o)) {
                var i = {
                    exception: r,
                    cause: n
                },
                    t = o + r.message;
                a(t, i, !0)
            }
        }
    }
    var r = angular.module("app");
    r.config(["$provide", function (r) {
        r.decorator("$exceptionHandler", ["$delegate", "config", "logger", e])
    }])
}();;
! function () {
    "use strict";
    var e = toastr.options;
    e.timeOut = 4e3, e.positionClass = "toast-bottom-right", e.showMethod = "slideDown", e.hideMethod = "slideUp";
    var t = {
        backspace: 8,
        tab: 9,
        enter: 13,
        esc: 27,
        space: 32,
        pageup: 33,
        pagedown: 34,
        end: 35,
        home: 36,
        left: 37,
        up: 38,
        right: 39,
        down: 40,
        insert: 45,
        del: 46
    },
        n = {
            imageBasePath: "../content/images/photos/",
            unknownPersonImageSource: "unknown_person.jpg"
        },
        o = {
            controllerActivateSuccess: "controller.activateSuccess",
            entitiesChanged: "datacontext.entitiesChanged",
            entitiesImported: "datacontext.entitiesImported",
            hasChangesChanged: "datacontext.hasChangesChanged",
            spinnerToggle: "spinner.toggle",
            storage: {
                error: "store.error",
                storeChanged: "store.changed",
                wipChanged: "wip.changed"
            }
        },
        s = {
            appErrorPrefix: "[CC Error] ",
            busyIndicator: "overlay",
            docTitle: "CC: ",
            events: o,
            imageSettings: n,
            keyCodes: t,
            version: "1.1.0"
        },
        a = angular.module("app");
    a.constant("config", s), a.config(["$logProvider", function (e) {
        e.debugEnabled && e.debugEnabled(!0)
    }]), a.config(["commonConfigProvider", function (e) {
        e.config.controllerActivateSuccessEvent = s.events.controllerActivateSuccess, e.config.spinnerToggleEvent = s.events.spinnerToggle
    }])
}();;
! function () {
    "use strict";

    function e(e, t) {
        function n(t, n) {
            return n.resolve = angular.extend(n.resolve || {}, {
                prime: s
            }), e.when(t, n), e
        }
        window.testing || (t.forEach(function (e) {
            n(e.url, e.config)
        }), e.otherwise({
            redirectTo: "/"
        }))
    }

    function s(e) {
        return e.prime()
    }

    function t() {
        return [{
            url: "/",
            config: {
                templateUrl: "app/dashboard/dashboard.html",
                title: "dashboard",
                settings: {
                    nav: 1,
                    content: '<i class="fa fa-dashboard"></i> Dashboard'
                }
            }
        }, {
            url: "/sessions",
            config: {
                title: "sessions",
                templateUrl: "app/session/sessions.html",
                settings: {
                    nav: 2,
                    content: '<i class="fa fa-calendar"></i> Sessions'
                }
            }
        }, {
            url: "/sessions/search/:search",
            config: {
                title: "sessions-search",
                templateUrl: "app/session/sessions.html",
                settings: {}
            }
        }, {
            url: "/session/:id",
            config: {
                templateUrl: "app/session/sessiondetail.html",
                title: "session",
                settings: {}
            }
        }, {
            url: "/speaker/:id",
            config: {
                templateUrl: "app/speaker/speakerdetail.html",
                title: "speaker",
                settings: {}
            }
        }, {
            url: "/speakers",
            config: {
                templateUrl: "app/speaker/speakers.html",
                title: "speakers",
                settings: {
                    nav: 3,
                    content: '<i class="fa fa-user"></i> Speakers'
                }
            }
        }, {
            url: "/attendees",
            config: {
                templateUrl: "app/attendee/attendees.html",
                title: "attendees",
                settings: {
                    nav: 4,
                    content: '<i class="fa fa-group"></i> Attendees'
                }
            }
        }, {
            url: "/workinprogress",
            config: {
                templateUrl: "app/wip/wip.html",
                title: "workinprogress",
                settings: {
                    content: '<i class="fa fa-asterisk"></i> Work In Progress'
                }
            }
        }]
    }
    var n = angular.module("app");
    n.constant("routes", t()), n.config(["$routeProvider", "routes", e]), s.$inject = ["datacontext"]
}();;
! function () {
    "use strict";
    var n = angular.module("environment", []);
    n.constant("stack", "swan")
}();;
! function () {
    "use strict";

    function e(e, n, a) {
        function r() {
            e.activateController([i()], t)
        }

        function o() {
            return a.attendee.getCount().then(function (e) {
                return f.attendeeCount = e, f.attendeeCount
            })
        }

        function u() {
            f.attendeeFilteredCount = a.attendee.getFilteredCount(f.attendeeSearch)
        }

        function i(e) {
            return a.attendee.getAll(e, f.paging.currentPage, f.paging.pageSize, f.attendeeSearch).then(function (t) {
                return f.attendees = t, (!f.attendeeCount || e) && o(), u(), t
            })
        }

        function d(e) {
            e && (f.paging.currentPage = e, i())
        }

        function c() {
            return i(!0)
        }

        function g(e) {
            e.keyCode === l.esc && (f.attendeeSearch = ""), i()
        }
        var f = this,
            l = n.keyCodes;
        f.attendeeCount = 0, f.attendeeFilteredCount = 0, f.attendeeSearch = "", f.attendees = [], f.filteredAttendees = [], f.paging = {
            currentPage: 1,
            maxPagesToShow: 5,
            pageSize: 15
        }, f.pageChanged = d, f.refresh = c, f.search = g, f.title = "Attendees", Object.defineProperty(f.paging, "pageCount", {
            get: function () {
                return Math.floor(f.attendeeFilteredCount / f.paging.pageSize) + 1
            }
        }), r()
    }
    var t = "attendees";
    angular.module("app").controller(t, ["common", "config", "datacontext", e])
}();;
! function () {
    "use strict";

    function t(t, n, o, r, e) {
        function c(n, o) {
            return t.all(n).then(function () {
                var t = {
                    controllerId: o
                };
                i(r.config.controllerActivateSuccessEvent, t)
            })
        }

        function i() {
            return n.$broadcast.apply(n, arguments)
        }

        function u(t, n, r, e, c) {
            c = +c || 300, r || (r = "filtered" + n[0].toUpperCase() + n.substr(1).toLowerCase(), e = n + "Filter");
            var i = function () {
                t[r] = t[n].filter(function (n) {
                    return t[e](n)
                })
            };
            return function () {
                var t;
                return function (n) {
                    t && (o.cancel(t), t = null), n || !c ? i() : t = o(i, c)
                }
            }()
        }

        function a(t, n, r, e) {
            var c = 1e3;
            r = r || c, s[t] && (o.cancel(s[t]), s[t] = void 0), e ? n() : s[t] = o(n, r)
        }

        function f(t) {
            return /^[-]?\d+$/.test(t)
        }

        function l(t, n) {
            return t && -1 !== t.toLowerCase().indexOf(n.toLowerCase())
        }
        var s = {},
            g = {
                $broadcast: i,
                $q: t,
                $timeout: o,
                activateController: c,
                createSearchThrottle: u,
                debouncedThrottle: a,
                isNumber: f,
                logger: e,
                textContains: l
            };
        return g
    }
    var n = angular.module("common", []);
    n.provider("commonConfig", function () {
        this.config = {}, this.$get = function () {
            return {
                config: this.config
            }
        }
    }), n.factory("common", ["$q", "$rootScope", "$timeout", "commonConfig", "logger", t])
}();;
! function () {
    "use strict";

    function r(r) {
        function o(r, o) {
            switch (o = o || "log", o.toLowerCase()) {
                case "success":
                    o = "logSuccess";
                    break;
                case "error":
                    o = "logError";
                    break;
                case "warn":
                    o = "logWarning";
                    break;
                case "warning":
                    o = "logWarning"
            }
            var n = t[o] || t.log;
            return function (o, c, s) {
                n(o, c, r, void 0 === s ? !0 : s)
            }
        }

        function n(r, o, n, c) {
            a(r, o, n, c, "info")
        }

        function c(r, o, n, c) {
            a(r, o, n, c, "warning")
        }

        function s(r, o, n, c) {
            a(r, o, n, c, "success")
        }

        function e(r, o, n, c) {
            a(r, o, n, c, "error")
        }

        function a(o, n, c, s, e) {
            var a = "error" === e ? r.error : r.log;
            c = c ? "[" + c + "] " : "", a(c, o, n), s && ("error" === e ? toastr.error(o) : "warning" === e ? toastr.warning(o) : "success" === e ? toastr.success(o) : toastr.info(o))
        }
        var t = {
            getLogFn: o,
            log: n,
            logError: e,
            logSuccess: s,
            logWarning: c
        };
        return t
    }
    angular.module("common").factory("logger", ["$log", r])
}();;
! function () {
    "use strict";

    function n(n, o) {
        function i() {
            r(!1)
        }

        function c() {
            r(!0)
        }

        function r(i) {
            n.$broadcast(o.config.spinnerToggleEvent, {
                show: i
            })
        }
        var t = {
            spinnerHide: i,
            spinnerShow: c
        };
        return t
    }
    angular.module("common").factory("spinner", ["common", "commonConfig", n])
}();;
! function () {
    "use strict";

    function e(e, n) {
        function o() {
            var n = [s(), i(), r()];
            a(), e.activateController(n, t)
        }

        function r() {
            return n.session.getSessionsPerTrack().then(function (e) {
                u.content.tracks = e
            })
        }

        function a() {
            var e = n.speaker.getAllLocal();
            u.speakerCount = e.length, u.speakers.list = n.speaker.getTopLocal()
        }

        function s() {
            return n.attendee.getCount().then(function (e) {
                return u.attendeeCount = e, u.attendeeCount
            })
        }

        function i() {
            return n.session.getCount().then(function (e) {
                return u.sessionCount = e, u.sessionCount
            })
        }

        function c(e) {
            u.content.predicate = e, u.content.reverse = !u.content.reverse
        }
        var u = this;
        u.map = {
            title: "Location"
        }, u.news = {
            title: "Code Camp",
            description: "Code Camp is a community event where developers learn from fellow developers. All are welcome to attend and speak. Code Camp is free, by and for the developer community,  and occurs on the weekends."
        }, u.speakers = {
            interval: 5e3,
            list: [],
            title: "Top Speakers"
        }, u.content = {
            predicate: "",
            reverse: !1,
            setSort: c,
            title: "Content",
            tracks: []
        }, u.title = "Dashboard", o()
    }
    var t = "dashboard";
    angular.module("app").controller(t, ["common", "datacontext", e])
}();;
! function () {
    "use strict";

    function n(n, e, t) {
        function s() {
            l("CodeCamper loaded!", null, !0), e.activateController([], o).then(function () {
                i()
            }), r()
        }

        function i() {
            e.$timeout(function () {
                u.showSplash = !1
            }, 1e3)
        }

        function c(n) {
            u.isBusy = n
        }

        function r() {
            u.useSpinner && (n.$on("$routeChangeStart", function () {
                c(!0)
            }), n.$on(a.controllerActivateSuccess, function () {
                c(!1)
            }), n.$on(a.spinnerToggle, function (n) {
                c(n.show)
            }))
        }
        var u = this,
            l = e.logger.getLogFn(o, "success"),
            a = t.events;
        u.busyMessage = "Please wait ...", u.isBusy = !0, u.showSplash = !0, u.spinnerOptions = {
            radius: 40,
            lines: 7,
            length: 0,
            width: 30,
            speed: 1.7,
            corners: 1,
            trail: 100,
            color: "#F58A00"
        }, u.useSpinner = "spinner" === t.busyIndicator, s()
    }
    var o = "shell";
    angular.module("app").controller(o, ["$rootScope", "common", "config", n])
}();;
! function () {
    "use strict";

    function t(t, e, n, r, i, o) {
        function c() {
            s(), f.wip = i.zStorageWip.getWipSummary()
        }

        function a() {
            function t() {
                i.zStorage.clear()
            }

            function e() { }
            return n.deleteDialog("local storage and work in progress").then(t).catch(e)
        }

        function s() {
            f.navRoutes = o.filter(function (t) {
                return t.config.settings && t.config.settings.nav
            }).sort(function (t, e) {
                return t.config.settings.nav - e.config.settings.nav
            })
        }

        function u(t) {
            if (!t.config.title || !e.current || !e.current.title) return "";
            var n = t.config.title;
            return e.current.title.substr(0, n.length) === n ? "current" : ""
        }

        function g(e) {
            if (e.keyCode === l.esc) return void (f.searchText = "");
            if ("click" === e.type || e.keyCode === l.enter) {
                var n = "/sessions/search/";
                t.path(n + f.searchText)
            }
        }
        var f = this,
            l = r.keyCodes;
        f.clearStorage = a, f.isCurrent = u, f.routes = o, f.search = g, f.searchText = "", f.wip = [], f.wipChangedEvent = r.events.storage.wipChanged, c()
    }
    var e = "sidebar";
    angular.module("app").controller(e, ["$location", "$route", "bootstrap.dialog", "config", "datacontext", "routes", t])
}();;
! function () {
    "use strict";

    function e(e, n, a, r, o, i, c, s, u) {
        function g() {
            s.init(E), u.init(E), d(), m(), y(), h()
        }

        function f() {
            E.hasChanges() && (E.rejectChanges(), w("Canceled changes", null, !0))
        }

        function d() {
            z.forEach(function (e) {
                Object.defineProperty(j, e, {
                    configurable: !0,
                    get: function () {
                        var t = l(e);
                        return Object.defineProperty(j, e, {
                            value: t,
                            configurable: !1,
                            enumerable: !0
                        }), t
                    }
                })
            })
        }

        function l(t) {
            var n = "repository." + t.toLowerCase(),
                a = e.get(n);
            return a.create(E)
        }

        function h() {
            n.$on(o.events.storage.storeChanged, function (e, t) {
                k("Updated local storage", t, !0)
            }), n.$on(o.events.storage.wipChanged, function (e, t) {
                k("Updated WIP", t, !0)
            }), n.$on(o.events.storage.error, function (e, t) {
                M("Error with local storage. " + t.activity, t, !0)
            })
        }

        function p(e) {
            return e.entityAspect.setDeleted()
        }

        function v() {
            function e() {
                var e = A.all([j.lookup.getAll(), j.speaker.getPartials(!0)]);
                return c.useManualMetadata || (e = e.then(function () {
                    c.extendMetadata(E.metadataStore)
                })), e.then(function () {
                    s.save()
                })
            }

            function t() {
                k("Primed data", j.lookup.cachedData)
            }
            if (S) return S;
            var n = s.load(E),
                a = n ? A.when(k("Loading entities and metadata from local storage")) : e();
            return S = a.then(t)
        }

        function C() {
            function e(e) {
                w("Saved data", e, !0), s.save()
            }

            function t(e) {
                var t = o.appErrorPrefix + "Save failed: " + a.saveErrorMessageService.getErrorMessage(e);
                throw e.message = t, M(t, e), e
            }
            return E.saveChanges().then(e).catch(t)
        }

        function y() {
            E.entityChanged.subscribe(function (e) {
                e.entityAction === a.EntityAction.PropertyChange && (b(e), r.$broadcast(P.entitiesChanged, e))
            })
        }

        function m() {
            E.hasChangesChanged.subscribe(function (e) {
                var t = {
                    hasChanges: e.hasChanges
                };
                r.$broadcast(P.hasChangesChanged, t)
            })
        }

        function b(e) {
            var t = e.args.propertyName;
            ("isPartial" === t || "isSpeaker" === t) && delete e.entity.entityAspect.originalValues[t]
        }
        var S, P = o.events,
            $ = r.logger.getLogFn,
            k = $(t),
            M = $(t, "error"),
            w = $(t, "success"),
            E = i.newManager(),
            z = ["attendee", "lookup", "session", "speaker"],
            A = r.$q,
            j = {
                cancel: f,
                markDeleted: p,
                prime: v,
                save: C,
                zStorage: s,
                zStorageWip: u
            };
        return g(), j
    }
    var t = "datacontext";
    angular.module("app").factory(t, ["$injector", "$rootScope", "breeze", "common", "config", "entityManagerFactory", "model", "zStorage", "zStorageWip", e])
}();;
! function () {
    "use strict";
    var e = angular.module("app");
    e.directive("ccSidebar", function () {
        function e(e, n) {
            function t(e) {
                function n() {
                    i.slideUp(350), $(".sidebar-dropdown a").removeClass(t)
                }
                var t = "dropy";
                e.preventDefault(), r.hasClass(t) ? r.hasClass(t) && (r.removeClass(t), i.slideUp(350)) : (n(), i.slideDown(350), r.addClass(t))
            }
            var i = n.find(".sidebar-inner"),
                r = n.find(".sidebar-dropdown a");
            n.addClass("sidebar"), r.click(t)
        }
        var n = {
            link: e,
            restrict: "A"
        };
        return n
    }), e.directive("ccWidgetClose", function () {
        function e(e, n, t) {
            function i(e) {
                e.preventDefault(), n.parent().parent().parent().hide(100)
            }
            t.$set("href", "#"), t.$set("wclose"), n.click(i)
        }
        var n = {
            link: e,
            template: '<i class="fa fa-remove"></i>',
            restrict: "A"
        };
        return n
    }), e.directive("ccWidgetMinimize", function () {
        function e(e, n, t) {
            function i(e) {
                e.preventDefault();
                var t = n.parent().parent().next(".widget-content"),
                    i = n.children("i");
                t.is(":visible") ? (i.removeClass("fa fa-chevron-up"), i.addClass("fa fa-chevron-down")) : (i.removeClass("fa fa-chevron-down"), i.addClass("fa fa-chevron-up")), t.toggle(500)
            }
            t.$set("href", "#"), t.$set("wminimize"), n.click(i)
        }
        var n = {
            link: e,
            template: '<i class="fa fa-chevron-up"></i>',
            restrict: "A"
        };
        return n
    }), e.directive("ccScrollToTop", ["$window", function (e) {
        function n(n, t) {
            function i() {
                r.scrollTop() > 300 ? t.slideDown() : t.slideUp()
            }
            var r = $(e);
            t.addClass("totop"), r.scroll(i), t.find("a").click(function (e) {
                e.preventDefault(), $("body").animate({
                    scrollTop: 0
                }, 500)
            })
        }
        var t = {
            link: n,
            template: '<a href="#"><i class="fa fa-chevron-up"></i></a>',
            restrict: "A"
        };
        return t
    }]), e.directive("ccSpinner", ["$window", function (e) {
        function n(n, t, i) {
            n.spinner = null, n.$watch(i.ccSpinner, function (i) {
                n.spinner && n.spinner.stop(), n.spinner = new e.Spinner(i), n.spinner.spin(t[0])
            }, !0)
        }
        var t = {
            link: n,
            restrict: "A"
        };
        return t
    }]), e.directive("ccImgPerson", ["config", function (e) {
        function n(e, n, r) {
            r.$observe("ccImgPerson", function (e) {
                e = t + (e || i), r.$set("src", e)
            })
        }
        var t = e.imageSettings.imageBasePath,
            i = e.imageSettings.unknownPersonImageSource,
            r = {
                link: n,
                restrict: "A"
            };
        return r
    }]), e.directive("ccWidgetHeader", function () {
        function e(e, n, t) {
            t.$set("class", "widget-head")
        }
        var n = {
            link: e,
            scope: {
                title: "@",
                subtitle: "@",
                rightText: "@",
                allowCollapse: "@"
            },
            templateUrl: "/app/layout/widgetheader.html",
            restrict: "A"
        };
        return n
    }), e.directive("ccWip", ["$route", function (e) {
        function n(n, t) {
            function i() {
                return e.current && e.current.title ? e.current.title.substr(0, r.length) === r : !1
            }
            n.$watch(i, function (e) {
                e ? t.addClass("current") : t.removeClass("current")
            })
        }

        function t(e) {
            function n() {
                var n = e.changedEvent;
                e.$on(n, function (n, t) {
                    e.wip = t.wip
                }), e.wipRoute = e.routes.filter(function (e) {
                    return e.config.title === r
                })[0]
            }
            e.wipExists = function () {
                return !!e.wip.length
            }, e.wipRoute = void 0, e.getWipClass = function () {
                return e.wipExists() ? ["fa", "fa-asterisk", "fa-asterisk-alert"] : ["fa", "fa-asterisk"]
            }, n()
        }

        function i() {
            return '<a href="#{{wipRoute.url}}" ><i class="fa fa-asterisk" data-ng-class="getWipClass()"></i>Work in Progress ({{wip.length}})</a>'
        }
        var r = "workinprogress",
            a = {
                controller: ["$scope", t],
                link: n,
                template: i(),
                scope: {
                    wip: "=",
                    changedEvent: "@",
                    routes: "="
                },
                restrict: "A"
            };
        return a
    }])
}();;
! function () {
    "use strict";

    function e(e, a) {
        function t() {
            var e = new n.MetadataStore;
            return a.configureMetadataStore(e), a.useManualMetadata && e.addDataService(new n.DataService({
                serviceName: o
            })), e
        }

        function r() {
            var e = new n.EntityManager({
                serviceName: o,
                metadataStore: c
            });
            return e
        }
        var n = e.breeze,
            o = e.remoteServiceName,
            c = t(),
            i = {
                metadataStore: c,
                newManager: r
            };
        return i
    }
    var a = "entityManagerFactory";
    angular.module("app").factory(a, ["configBreeze", "model", e])
}();;
! function () {
    "use strict";

    function t(t, n) {
        function r(r) {
            var a = t.path(),
                i = a.lastIndexOf("/", a.length - 2),
                o = a.substring(i - 1);
            if (!n.isNumber(o)) {
                var u = a.substring(0, i + 1) + r;
                t.path(u)
            }
        }
        var a = {
            replaceLocationUrlGuidWithId: r
        };
        return a
    }
    var n = "helper";
    angular.module("app").factory(n, ["$location", "common", t])
}();;
! function () {
    "use strict";

    function t(t, n, a) {
        function r(t) {
            c(t), u(t), f(t), a.createAndRegister(p), e && (n.fillMetadataStore(t), o(t))
        }

        function o(t) {
            a.applyValidators(t), s(t)
        }

        function i(e) {
            function n(t, n) {
                var r = n || {
                    name: " [Select a " + t.toLowerCase() + "]"
                };
                return e.createEntity(t, r, a)
            }
            if (!m) {
                m = !0;
                var a = t.EntityState.Unchanged;
                n(p.timeslot, {
                    start: l,
                    isSessionSlot: !0
                }), n(p.room), n(p.speaker, {
                    firstName: " [Select a person]"
                }), n(p.track)
            }
        }

        function s(e) {
            function n(t, n) {
                e.setEntityTypeForResourceName(t, n)
            }
            var a = e.getEntityTypes();
            a.forEach(function (e) {
                e instanceof t.EntityType && n(e.shortName, e)
            });
            var r = p.person;
            ["Speakers", "Speaker", "Attendees", "Attendee"].forEach(function (t) {
                n(t, r)
            })
        }

        function c(t) {
            function e() {
                this.isPartial = !1
            }
            t.registerEntityTypeCtor("Session", e), Object.defineProperty(e.prototype, "tagsFormatted", {
                get: function () {
                    return this.tags ? this.tags.replace(/\|/g, ", ") : this.tags
                },
                set: function (t) {
                    this.tags = t.replace(/\, /g, "|")
                }
            })
        }

        function u(t) {
            function e() {
                this.isPartial = !1, this.isSpeaker = !1
            }
            t.registerEntityTypeCtor("Person", e), Object.defineProperty(e.prototype, "fullName", {
                get: function () {
                    var t = this.firstName,
                        e = this.lastName;
                    return e ? t + " " + e : t
                }
            })
        }

        function f(t) {
            function e() { }
            t.registerEntityTypeCtor("TimeSlot", e), Object.defineProperty(e.prototype, "name", {
                get: function () {
                    var t = this.start,
                        e = t - l === 0 ? " [Select a timeslot]" : t && moment.utc(t).isValid() ? moment.utc(t).format("ddd hh:mm a") : "[Unknown]";
                    return e
                }
            })
        }
        var l = new Date(1900, 0, 1),
            m = !1,
            p = {
                attendee: "Person",
                person: "Person",
                speaker: "Person",
                session: "Session",
                room: "Room",
                track: "Track",
                timeslot: "TimeSlot"
            },
            d = {
                configureMetadataStore: r,
                createNullos: i,
                entityNames: p,
                extendMetadata: o,
                useManualMetadata: e
            };
        return d
    }
    var e = !0,
        n = "model";
    angular.module("app").factory(n, ["breeze", "model.metadata", "model.validation", t])
}();;
! function () {
    "use strict";

    function e(e) {
        function a(e) {
            r = e, t(), n(), i(), o(), l()
        }

        function t() {
            d({
                name: "Person",
                dataProperties: {
                    id: {
                        type: c
                    },
                    firstName: {
                        max: 50,
                        nullOk: !1
                    },
                    lastName: {
                        max: 50,
                        nullOk: !1
                    },
                    email: {
                        max: 400
                    },
                    blog: {
                        max: 400
                    },
                    twitter: {
                        max: 400
                    },
                    gender: {
                        max: 1
                    },
                    imageSource: {
                        max: 400
                    },
                    isPartial: {
                        type: k,
                        nullOk: !1,
                        isUnmapped: !0
                    },
                    isSpeaker: {
                        type: k,
                        nullOk: !1,
                        isUnmapped: !0
                    }
                },
                navigationProperties: {
                    speakerSessions: {
                        type: "Session",
                        hasMany: !0
                    }
                }
            })
        }

        function n() {
            d({
                name: "Session",
                dataProperties: {
                    id: {
                        type: c
                    },
                    title: {
                        max: 50,
                        nullOk: !1
                    },
                    code: {
                        max: 10
                    },
                    description: {
                        max: 4e3
                    },
                    level: {
                        max: 30
                    },
                    tags: {
                        max: 4e3
                    },
                    roomId: {
                        type: c,
                        nullOk: !1
                    },
                    speakerId: {
                        type: c,
                        nullOk: !1
                    },
                    timeSlotId: {
                        type: c,
                        nullOk: !1
                    },
                    trackId: {
                        type: c,
                        nullOk: !1
                    },
                    isPartial: {
                        type: k,
                        nullOk: !1,
                        isUnmapped: !0
                    }
                },
                navigationProperties: {
                    room: "Room",
                    speaker: "Person",
                    timeSlot: "TimeSlot",
                    track: "Track"
                }
            })
        }

        function i() {
            d({
                name: "Room",
                dataProperties: {
                    id: {
                        type: c
                    },
                    name: {
                        max: 50,
                        nullOk: !1
                    }
                }
            })
        }

        function o() {
            d({
                name: "TimeSlot",
                dataProperties: {
                    id: {
                        type: c
                    },
                    start: {
                        type: y,
                        nullOk: !1
                    },
                    isSessionSlot: {
                        type: k,
                        nullOk: !1
                    },
                    duration: {
                        type: c,
                        nullOk: !1
                    }
                }
            })
        }

        function l() {
            d({
                name: "Track",
                dataProperties: {
                    id: {
                        type: c
                    },
                    name: {
                        max: 50,
                        nullOk: !1
                    }
                }
            })
        }
        var r, m = e.AutoGeneratedKeyType.Identity,
            p = "CC.Model",
            s = new e.config.MetadataHelper(p, m),
            d = function (e) {
                s.addTypeToStore(r, e)
            },
            u = e.DataType,
            k = u.Boolean,
            y = u.DateTime,
            c = u.Int32;
        return {
            fillMetadataStore: a
        }
    }
    var a = "model.metadata";
    angular.module("app").factory(a, ["breeze", e])
}();;
! function () {
    "use strict";

    function e(e, r) {
        function a(e) {
            o(e), s(e), n(e), l(e), y("Validators applied", null, !1)
        }

        function i(e) {
            d = e, g = p(), c = u(), f.register(g), f.register(c), y("Validators created and registered", null, !1)
        }

        function n(e) {
            var t = e.getEntityType(d.speaker);
            t.getProperty("email").validators.push(f.emailAddress())
        }

        function o(e) {
            var t = ["room", "track", "timeSlot", "speaker"],
                r = e.getEntityType(d.session);
            t.forEach(function (e) {
                r.getProperty(e).validators.push(g)
            })
        }

        function s(e) {
            var t = e.getEntityType(d.speaker);
            t.getProperty("twitter").validators.push(c)
        }

        function l(e) {
            var t = e.getEntityType(d.speaker);
            t.getProperty("blog").validators.push(f.url())
        }

        function u() {
            var e = f.makeRegExpValidator("twitter", /^@([a-zA-Z]+)([a-zA-Z0-9_]+)$/, 'Invalid Twitter User Name: "%value%"');
            return e
        }

        function p() {
            function e(e) {
                return e ? 0 !== e.id : !1
            }
            var t = "requireReferenceEntity",
                r = {
                    messageTemplate: "Missing %displayName%",
                    isRequired: !0
                },
                a = new f(t, e, r);
            return a
        }
        var d, g, c, y = r.logger.getLogFn(t),
            f = e.Validator,
            v = {
                applyValidators: a,
                createAndRegister: i
            };
        return v
    }
    var t = "model.validation";
    angular.module("app").factory(t, ["breeze", "common", e])
}();;
! function () {
    "use strict";

    function t(t, n, r, e, a) {
        function i() {
            u(), c()
        }

        function u() {
            n.$on("$routeChangeError", function (n, r, e, i) {
                if (!l) {
                    l = !0;
                    var u = r && (r.title || r.name || r.loadedTemplateUrl) || "unknown target",
                        c = "Error routing to " + u + ". " + (i.msg || "");
                    a.logWarning(c, r, o, !0), t.path("/")
                }
            })
        }

        function c() {
            n.$on("$routeChangeSuccess", function (t, o) {
                l = !1;
                var r = e.docTitle + " " + (o.title || "");
                n.title = r
            })
        }
        var l = !1,
            g = {
                setRoutingEventHandlers: i
            };
        return g
    }
    var n = angular.module("app"),
        o = "routemediator";
    n.factory(o, ["$location", "$rootScope", "$route", "config", "logger", t])
}();;
! function () {
    "use strict";

    function n(n, s, t, o, i, a, c, r, u, l) {
        function g() {
            S(), C(), $(), a.activateController([m()], e).then(y)
        }

        function d(n) {
            a.debouncedThrottle(e, L, 1e3, n)
        }

        function f() {
            r.cancel(), w(), u.replaceLocationUrlGuidWithId(D.session.id), D.session.entityAspect.entityState.isDetached() && h()
        }

        function h() {
            n.path("/sessions")
        }

        function p() {
            return D.hasChanges && !D.isSaving
        }

        function v() {
            function n() {
                function n() {
                    w(), h()
                }

                function e() {
                    f()
                }
                r.markDeleted(D.session), D.save().then(n).catch(e)
            }
            return i.deleteDialog("Session").then(n)
        }

        function m() {
            var n = t.id;
            return "new" === n ? (D.session = r.session.create(), D.session) : r.session.getEntityByIdOrFromWip(n).then(function (e) {
                e ? (b = e.key, D.session = e.entity || e) : (F("Could not find session id = " + n), h())
            }).catch(function (e) {
                I("Error while getting session id = " + n + "; " + e), h()
            })
        }

        function k() {
            o.history.back()
        }

        function S() {
            var n = r.lookup.cachedData;
            D.rooms = n.rooms, D.timeslots = n.timeslots, D.tracks = n.tracks, D.speakers = r.speaker.getAllLocal(!0)
        }

        function y() {
            s.$on(c.events.entitiesChanged, function () {
                d()
            })
        }

        function C() {
            s.$on("$destroy", function () {
                d(!0), r.cancel()
            })
        }

        function $() {
            s.$on(c.events.hasChangesChanged, function (n, e) {
                D.hasChanges = e.hasChanges
            })
        }

        function w() {
            r.zStorageWip.removeWipEntity(b)
        }

        function W() {
            return p() ? (D.isSaving = !0, r.save().then(function () {
                D.isSaving = !1, w(), u.replaceLocationUrlGuidWithId(D.session.id), r.speaker.calcIsSpeaker()
            }).catch(function () {
                D.isSaving = !1
            })) : z.when(null)
        }

        function L() {
            if (D.session) {
                var n = D.session.title || "[New Session]" + D.session.id;
                b = r.zStorageWip.storeWipEntity(D.session, b, E, n)
            }
        }
        var b, D = this,
            E = l.entityNames.session,
            I = a.logger.getLogFn(e, "error"),
            F = a.logger.getLogFn(e, "warn"),
            z = a.$q;
        D.cancel = f, D.deleteSession = v, D.goBack = k, D.hasChanges = !1, D.isSaving = !1, D.rooms = [], D.save = W, D.session = void 0, D.speakers = [], D.timeslots = [], D.tracks = [], Object.defineProperty(D, "canSave", {
            get: p
        }), g()
    }
    var e = "sessiondetail";
    angular.module("app").controller(e, ["$location", "$scope", "$routeParams", "$window", "bootstrap.dialog", "common", "config", "datacontext", "helper", "model", n])
}();;
! function () {
    "use strict";

    function s(s, n, o, t, i, r, a) {
        function c() {
            i.activateController([f()], e).then(function () {
                g = i.createSearchThrottle(m, "sessions"), m.sessionsSearch && g(!0)
            })
        }

        function u(s) {
            s.keyCode === S.esc ? (m.sessionsSearch = "", g(!0)) : g()
        }

        function f(s) {
            return a.session.getPartials(s).then(function (s) {
                return m.sessions = m.filteredSessions = s, m.sessions
            })
        }

        function l(e) {
            e && e.id && s.path("/session/" + e.id)
        }

        function h() {
            f(!0)
        }

        function d(s) {
            var e = i.textContains,
                n = m.sessionsSearch,
                o = n ? e(s.title, n) || e(s.tagsFormatted, n) || e(s.room.name, n) || e(s.track.name, n) || e(s.speaker.fullName, n) : !0;
            return o
        }
        var m = this,
            S = r.keyCodes,
            g = function () { };
        m.filteredSessions = [], m.gotoSession = l, m.refresh = h, m.search = u, m.sessions = [], m.sessionsFilter = d, m.sessionsSearch = t.search || "", m.title = "Sessions", c()
    }
    var e = "sessions";
    angular.module("app").controller(e, ["$location", "$scope", "$route", "$routeParams", "common", "config", "datacontext", s])
}();;
! function () {
    "use strict";

    function e(e, t, a, i, o, r, s, c, u) {
        function p() {
            y(), m(), o.activateController([d()], n).then(v)
        }

        function g(e) {
            o.debouncedThrottle(n, $, 1e3, e)
        }

        function l() {
            s.cancel(), C(), c.replaceLocationUrlGuidWithId(W.speaker.id), W.speaker.entityAspect.entityState.isDetached() && f()
        }

        function f() {
            e.path("/speakers")
        }

        function h() {
            return W.hasChanges && !W.isSaving
        }

        function d() {
            var e = a.id;
            return "new" === e ? (W.speaker = s.speaker.create(), W.speaker) : s.speaker.getEntityByIdOrFromWip(e).then(function (n) {
                n ? (w = n.key, W.speaker = n.entity || n) : (b("Could not find session id = " + e), f())
            }).catch(function (n) {
                L("Error while getting speaker id = " + e + "; " + n), f()
            })
        }

        function k() {
            i.history.back()
        }

        function v() {
            t.$on(r.events.entitiesChanged, function () {
                g()
            })
        }

        function y() {
            t.$on("$destroy", function () {
                g(!0), s.cancel()
            })
        }

        function m() {
            t.$on(r.events.hasChangesChanged, function (e, n) {
                W.hasChanges = n.hasChanges
            })
        }

        function C() {
            s.zStorageWip.removeWipEntity(w)
        }

        function S() {
            return h() ? (W.isSaving = !0, s.save().then(function () {
                W.isSaving = !1, C(), c.replaceLocationUrlGuidWithId(W.speaker.id)
            }).catch(function () {
                W.isSaving = !1
            })) : F.when(null)
        }

        function $() {
            if (W.speaker) {
                var e = (W.speaker.fullName || "[New speaker]") + " " + W.speaker.id,
                    n = "speaker";
                w = s.zStorageWip.storeWipEntity(W.speaker, w, E, e, n)
            }
        }
        var w, W = this,
            E = u.entityNames.speaker,
            L = o.logger.getLogFn(n, "error"),
            b = o.logger.getLogFn(n, "warn"),
            F = o.$q;
        W.cancel = l, W.goBack = k, W.hasChanges = !1, W.isSaving = !1, W.save = S, W.speaker = null, W.speakers = [], Object.defineProperty(W, "canSave", {
            get: h
        }), p()
    }
    var n = "speakerdetail";
    angular.module("app").controller(n, ["$location", "$scope", "$routeParams", "$window", "common", "config", "datacontext", "helper", "model", e])
}();;
! function () {
    "use strict";

    function e(e, t, a, n) {
        function o() {
            t.activateController([c()], r)
        }

        function s() {
            k.filteredSpeakers = k.speakers.filter(f)
        }

        function c(e) {
            return n.speaker.getPartials(e).then(function (e) {
                return k.speakers = e, s(), e
            })
        }

        function i(r) {
            r && r.id && e.path("/speaker/" + r.id)
        }

        function p() {
            c(!0)
        }

        function u(e) {
            e.keyCode === l.esc && (k.speakerSearch = ""), s()
        }

        function f(e) {
            var r = k.speakerSearch ? t.textContains(e.fullName, k.speakerSearch) : !0;
            return r
        }
        var k = this,
            l = a.keyCodes;
        k.filteredSpeakers = [], k.gotoSpeaker = i, k.refresh = p, k.search = u, k.speakerSearch = "", k.speakers = [], k.title = "Speakers", o()
    }
    var r = "speakers";
    angular.module("app").controller(r, ["$location", "common", "config", "datacontext", e])
}();;
! function () {
    "use strict";

    function e(e, i, n, o, r, a) {
        function c() {
            o.activateController([p()], t), e.$on(r.events.storage.wipChanged, function (e, t) {
                g.wip = t
            })
        }

        function l() {
            function e() {
                g.isDeleting = !1
            }

            function t() {
                a.zStorageWip.clearAllWip(), g.isDeleting = !1
            }
            return g.isDeleting = !0, n.deleteDialog("Work in Progress").then(t, e)
        }

        function p() {
            g.wip = a.zStorageWip.getWipSummary()
        }

        function s(e) {
            i.path("/" + e.routeState + "/" + e.key)
        }

        function u(e) {
            g.predicate = e, g.reverse = !g.reverse
        }
        var g = this;
        g.cancelAllWip = l, g.gotoWip = s, g.predicate = "", g.reverse = !1, g.setSort = u, g.title = "Work in Progress", g.wip = [], c()
    }
    var t = "wip";
    angular.module("app").controller(t, ["$scope", "$location", "bootstrap.dialog", "common", "config", "datacontext", e])
}();;
! function () {
    "use strict";

    function t(t, e) {
        function a(t) {
            var e = "Confirm Delete";
            t = t || "item";
            var o = "Delete " + t + "?";
            return n(e, o)
        }

        function n(e, a, n, l) {
            var c = {
                templateUrl: "modalDialog.tpl.html",
                controller: o,
                keyboard: !0,
                resolve: {
                    options: function () {
                        return {
                            title: e,
                            message: a,
                            okText: n,
                            cancelText: l
                        }
                    }
                }
            };
            return t.open(c).result
        }
        var l = {
            deleteDialog: a,
            confirmationDialog: n
        };
        return e.put("modalDialog.tpl.html", '<div>    <div class="modal-header">        <button type="button" class="close" data-dismiss="modal"             aria-hidden="true" data-ng-click="cancel()">&times;</button>        <h3>{{title}}</h3>    </div>    <div class="modal-body">        <p>{{message}}</p>    </div>    <div class="modal-footer">        <button class="btn btn-primary" data-ng-click="ok()">{{okText}}</button>        <button class="btn btn-info" data-ng-click="cancel()">{{cancelText}}</button>    </div></div>'), l
    }
    var e = angular.module("common.bootstrap", ["ui.bootstrap"]);
    e.factory("bootstrap.dialog", ["$modal", "$templateCache", t]);
    var o = ["$scope", "$modalInstance", "options", function (t, e, o) {
        t.title = o.title || "Title", t.message = o.message || "", t.okText = o.okText || "OK", t.cancelText = o.cancelText || "Cancel", t.ok = function () {
            e.close("ok")
        }, t.cancel = function () {
            e.dismiss("cancel")
        }
    }]
}();;
! function () {
    "use strict";

    function t(t, e, r, i, n) {
        function o(t, r, i) {
            this.entityName = r, this.getById = l.bind(this), this.getEntityByIdOrFromWip = u.bind(this), this.log = e.logger.getLogFn(i), this.logError = e.logger.getLogFn(i, "error"), this.manager = t, this.queryFailed = c.bind(this)
        }

        function a(e, r, i) {
            return t.EntityQuery.from(e).where(i).orderBy(r).using(this.manager).executeLocally()
        }

        function l(t, e) {
            function r(e) {
                return (l = e.entity) ? (l.isPartial = !1, n.log("Retrieved [" + o + "] id " + l.id + " from remote data source", l, !0), i.save(), l) : (n.log("Could not find [" + o + "] id:" + t, null, !0), null)
            }
            var n = this,
                o = n.entityName,
                a = n.manager;
            if (!e) {
                var l = a.getEntityByKey(o, t);
                if (l && !l.isPartial) return n.log("Retrieved [" + o + "] id:" + l.id + " from cache.", l, !0), l.entityAspect.entityState.isDeleted() && (l = null), d.when(l)
            }
            return a.fetchEntityByKey(o, t).then(r).catch(n.queryFailed)
        }

        function u(t) {
            var r = this,
                i = r.entityName,
                o = t;
            if (e.isNumber(t) && (t = parseInt(t), o = n.findWipKeyByEntityId(i, t), !o)) return l.bind(r)(t);
            var a = null,
                u = n.loadWipEntity(o);
            return u ? (u.entityAspect.validateEntity(), a = {
                entity: u,
                key: o
            }) : r.log("Could not find [" + i + "] id in WIP:" + o, null, !0), d.when(a)
        }

        function s(e) {
            var r = t.EntityQuery.from(e).where(y.isNotNullo).using(this.manager).executeLocally();
            return r.length
        }

        function c(t) {
            var e = r.appErrorPrefix + "Error retrieving data. " + (t.message || "");
            return this.logError(e, t), d.reject(new Error(e))
        }

        function g(t) {
            for (var e = t.length; e--;) t[e].isPartial = !0;
            return t
        }
        var y = {
            isNotNullo: t.Predicate.create("id", "!=", 0),
            isNullo: t.Predicate.create("id", "==", 0)
        },
            d = e.$q;
        return o.prototype = {
            constructor: o,
            $q: d,
            getAllLocal: a,
            getLocalEntityCount: s,
            predicates: y,
            setIsPartialTrue: g,
            zStorage: i,
            zStorageWip: n
        }, o
    }
    var e = "repository.abstract";
    angular.module("app").factory(e, ["breeze", "common", "config", "zStorage", "zStorageWip", t])
}();;
! function () {
    "use strict";

    function e(e, r, n) {
        function a(r) {
            function a(t) {
                return e.Predicate.create("firstName", "contains", t).or("lastName", "contains", t)
            }

            function s(e, t, r, n) {
                function s(e) {
                    var t = g.setIsPartialTrue(e.results);
                    return g.zStorage.areItemsLoaded("attendees", !0), g.log("Retrieved [Attendees] from remote data source", t.length, !0), g.zStorage.save(), c()
                }

                function c() {
                    var e = g.predicates.isNotNullo;
                    n && (e = e.and(a(n)));
                    var t = o.where(e).orderBy(u).take(d).skip(l).using(g.manager).executeLocally();
                    return t
                }
                var d = r || 20,
                    l = t ? (t - 1) * r : 0;
                return g.zStorage.areItemsLoaded("attendees") && !e ? g.$q.when(c()) : o.select("id, firstName, lastName, imageSource").orderBy(u).toType(i).using(g.manager).execute().then(s).catch(g.queryFailed)
            }

            function c() {
                return g.zStorage.areItemsLoaded("attendees") ? g.$q.when(g.getLocalEntityCount(i)) : void 0 !== l ? g.$q.when(l) : o.take(0).inlineCount().using(g.manager).execute().then(function (e) {
                    return l = e.inlineCount
                })
            }

            function d(t) {
                var r = e.Predicate.and(g.predicates.isNotNullo).and(a(t)),
                    n = o.where(r).using(g.manager).executeLocally();
                return n.length
            }
            var l, g = new n(r, i, t),
                m = {
                    getAll: s,
                    getCount: c,
                    getFilteredCount: d
                };
            return m
        }
        var o = e.EntityQuery.from("Persons"),
            i = r.entityNames.attendee,
            u = "firstName, lastName";
        return {
            create: a
        }
    }
    var t = "repository.attendee";
    angular.module("app").factory(t, ["breeze", "model", "repository.abstract", e])
}();;
! function () {
    "use strict";

    function t(t, o, r) {
        function n(n) {
            function l() {
                function e(t) {
                    return o.createNullos(n), i.log("Retrieved lookups", t, !0), i.zStorage.save(), !0
                }
                return t.EntityQuery.from("Lookups").using(n).execute().then(e).catch(i.queryFailed)
            }

            function c() {
                return s || (s = {
                    rooms: i.getAllLocal(a.room, "name"),
                    tracks: i.getAllLocal(a.track, "name"),
                    timeslots: i.getAllLocal(a.timeslot, "start")
                }), s
            }
            var s, i = new r(n, u, e),
                m = {
                    getAll: l,
                    get cachedData() {
                        return c()
                    }
                };
            return m
        }
        var u = "lookups",
            a = o.entityNames;
        return {
            create: n
        }
    }
    var e = "repository.lookup";
    angular.module("app").factory(e, ["breeze", "model", "repository.abstract", t])
}();;
! function () {
    "use strict";

    function e(e, r, n) {
        function a(e) {
            function a() {
                return e.createEntity(s)
            }

            function l() {
                return f.zStorage.areItemsLoaded("sessions") ? f.$q.when(f.getLocalEntityCount(s)) : void 0 !== m ? f.$q.when(m) : u.take(0).inlineCount().using(e).execute().then(function (e) {
                    return m = e.inlineCount
                })
            }

            function d(t) {
                function r(e) {
                    return n = f.setIsPartialTrue(e.results), i(n), f.zStorage.areItemsLoaded("sessions", !0), f.log("Retrieved [Session Partials] from remote data source", n.length, !0), f.zStorage.save(), n
                }
                var n;
                return f.zStorage.areItemsLoaded("sessions") && !t ? (n = f.getAllLocal(s, c), f.$q.when(n)) : u.select("id, title, code, speakerId, trackId, timeSlotId, roomId, level, tags").orderBy(c).toType(s).using(e).execute().then(r).catch(f.queryFailed)
            }

            function g() {
                function t(e) {
                    var t = e.results,
                        n = {};
                    return t.forEach(function (e) {
                        n[e.trackId] = n[e.trackId] ? n[e.trackId] += 1 : 1
                    }), y = f.getAllLocal(r.entityNames.track, "name", f.predicates.isNotNullo).map(function (e) {
                        return {
                            id: e.id,
                            track: e.name,
                            count: n[e.id] || 0
                        }
                    })
                }
                var n = u.select("trackId");
                if (f.zStorage.areItemsLoaded("sessions")) n = n.using(o.FetchStrategy.FromLocalCache);
                else if (y) return f.$q.when(y);
                return e.executeQuery(n).then(t).catch(f.queryFailed)
            }
            var m, y, f = new n(e, s, t),
                I = {
                    create: a,
                    getById: f.getById,
                    getCount: l,
                    getEntityByIdOrFromWip: f.getEntityByIdOrFromWip,
                    getPartials: d,
                    getSessionsPerTrack: g
                };
            return I
        }
        var o = e.breeze,
            s = r.entityNames.session,
            i = e.localSessionSort,
            c = "timeSlot.start, speaker.firstName, title",
            u = o.EntityQuery.from("Sessions");
        return {
            create: a
        }
    }
    var t = "repository.session";
    angular.module("app").factory(t, ["configBreeze", "model", "repository.abstract", e])
}();;
! function () {
    "use strict";

    function e(e, r, a) {
        function n(n) {
            function s() {
                var e = n.getEntities(g),
                    t = n.getEntities(f);
                e.forEach(function (e) {
                    e.isSpeaker = !1
                }), t.forEach(function (e) {
                    e.speaker.isSpeaker = 0 !== e.speakerId
                })
            }

            function l() {
                return n.createEntity(g)
            }

            function c(t) {
                var r = e.Predicate.create("isSpeaker", "==", !0);
                return t && (r = r.or(m.predicates.isNullo)), m.getAllLocal(i, o, r)
            }

            function u(t) {
                function r(e) {
                    a = e.results;
                    for (var t = a.length; t--;) a[t].isPartial = !0, a[t].isSpeaker = !0;
                    return m.log("Retrieved [Speaker Partials] from remote data source", a.length, !0), m.zStorage.save(), a
                }
                var a;
                return !t && (a = c(!1), a.length) ? m.$q.when(a) : e.EntityQuery.from("Speakers").select("id, firstName, lastName, imageSource").orderBy(o).toType(g).using(n).execute().then(r).catch(m.queryFailed)
            }

            function p() {
                var t = e.Predicate.create("lastName", "==", "Papa").or("lastName", "==", "Guthrie").or("lastName", "==", "Bell").or("lastName", "==", "Hanselman").or("lastName", "==", "Green").or("lastName", "==", "Lerman").and("isSpeaker", "==", !0);
                return m.getAllLocal(i, o, t)
            }
            var m = new a(n, i, t),
                y = n.metadataStore,
                g = y.getEntityType(r.entityNames.person),
                f = y.getEntityType(r.entityNames.session),
                d = {
                    calcIsSpeaker: s,
                    create: l,
                    getAllLocal: c,
                    getById: m.getById,
                    getEntityByIdOrFromWip: m.getEntityByIdOrFromWip,
                    getPartials: u,
                    getTopLocal: p
                };
            return d
        }
        var i = r.entityNames.speaker,
            o = "firstName, lastName";
        return {
            create: n
        }
    }
    var t = "repository.speaker";
    angular.module("app").factory(t, ["breeze", "model", "repository.abstract", e])
}();